#macro(result_id $doc)result-$doc.getFieldValue('dataset_id')#end

#macro(f $f)$doc.getFieldValue($f)#end

#macro(field $f)#foreach($v in $doc.getFieldValues($f))$esc.html($v)#end#end

#macro(field_br $f)
  #foreach($v in $doc.getFieldValues($f))
    $esc.html($v)<br/>
  #end
#end  

#macro(field_ul $field)
  #set($values = $doc.getFieldValues($field))
  #if($values.size() > 1)
    <ul>
      #foreach($value in $values)
        <li>$esc.html($value)</li>
      #end
    </ul>
  #else
    $esc.html($values.get(0))
  #end
#end

#macro(field_et_al $field $max)
  #foreach($value in $doc.getFieldValues($field))
    #if($velocityCount > $max)
      (et. al.)
      #break
    #end
    $esc.html($value)
    #if($velocityHasNext)&bull;#end
  #end
#end

#macro(if_has_field $field $body)
   #if($doc.containsKey($field) && $doc.getFieldValue($field) != "")
     $body
   #end
#end

## escape method especially for href attribute
#macro(esc $txt)$txt.replaceAll("&", "&amp;").replaceAll("\"", "&quot;")#end

#macro(esc_symbols $txt)$txt.replaceAll("&amp;#948;", "&delta;").replaceAll("&amp;#954;", "&kappa;")#end

#macro(esc_doi $doi)$esc.url($doi).replaceAll("%2F", "/")#end

#macro(remove_linebreak $txt)$txt.replaceAll("\r?\n", " ").replaceAll(" +", " ").trim()#end

## return q param if defined
#macro(q)#if($request.originalParams.q)$request.originalParams.q#end#end

#macro(param $key)$request.params.getParams($key)#end

#macro(qurl)q=$!{esc.url("#q()")}#end
#macro(fqs_generic $fqs)#foreach($fq in $fqs)#if(!$fq.startsWith("has_metadata:") and !$fq.startsWith("is_active:"))&amp;fq=$esc.url($fq)#end#end#end
#macro(fqs)#fqs_generic($request.params.getParams('fq'))#end

#macro(fqs_without $remove_fq)
#set($cur_fqs = $request.params.getParams('fq'))
#set($new_fqs = [])
#foreach($fq in $cur_fqs)#if(!($fq == $remove_fq))#set($null = $new_fqs.add($fq))#end#end
#fqs_generic($new_fqs)
#end

#macro(make_facet_limit $field $limit)&amp;f.${field}.facet.limit=$limit#end

#macro(facet_limit_without $field)
#foreach($myfield in $response.facetFields)
#set($mylimit = false)
#set($mylimit = $request.params.get("f.${myfield.name}.facet.limit"))
#if($mylimit && $myfield.name != $field)
#make_facet_limit($myfield.name, $mylimit)
#end
#end
#end

#macro(make_fq $field $value)$esc.url($field):%22$esc.url($value)%22#end

#macro(lens_without_q)#fqs#end
#macro(lens)#qurl#lens_without_q#end

#macro(url_for_nofilters)?#qurl#end
#macro(url_for_lens)?#lens#end
#macro(url_for_lens_without_q)?#lens_without_q#end
#macro(url_for_start $start)#url_for_lens&amp;start=$start#end
#macro(url_for_facet_filter $field $value)#url_for_lens&amp;fq=#make_fq($field,$value)#end
#macro(url_for_facet_filter_missing $field)#url_for_lens&amp;fq=$esc.url("-$field:[* TO *]")#end
#macro(url_for_removing_facet_filter $filter)?#qurl#fqs_without($filter)#end
#macro(url_for_show_more_facet $field $limit)#url_for_lens#facet_limit_without($field)#make_facet_limit($field, $limit)#end


#macro(normalize_facet $facet)$facet.replaceAll("_facet","")#end

